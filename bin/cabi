#!/usr/bin/env ruby
require "thor"
require "fileutils"

require File.join( File.expand_path("../..", __FILE__), "lib", "cabi")

class CabiCLI < Thor

  # -----------------------------------------------------------------------------------------------------------
  # Init Task
  # -----------------------------------------------------------------------------------------------------------
  desc "init", "Initialize Cabi data directory (use --mock to create fake data, use --target to specify your own directory)"
  method_options :mock => :boolean, :target => :string
  def init
    
    target = options[:target] || Cabi::CABI_DATA_DIR
    FileUtils.mkdir( target )

    if options[:mock]
      f = File.expand_path( "../../data/cabi-data.tar.gz", __FILE__ )
      `tar -xf #{f} --strip-components=1 -C #{target}`
    end

    puts "** Cabi data created in #{target}"
  end

  # -----------------------------------------------------------------------------------------------------------
  # Clean Task
  # -----------------------------------------------------------------------------------------------------------
  desc "clean", "Remove Cabi data directory"
  method_options :force => :boolean  
  def clean
    puts "\n** Trying to clean Cabi data folder." 

    current_dir = File.expand_path(Dir.pwd) == Cabi.data_dir({ quiet: true })

    if current_dir
      puts "** Cabi data folder is the same as the current folder -- not cleaning!" 
    else
      if options[:force]
        begin
          FileUtils.rm_rf( Cabi.data_dir )
          puts " ** Cleaned cabi data" 
        rescue Exception => e
        end
      else
        puts "** Not cleaning cabi data folder without --force" 
      end
    end


  end

end

CabiCLI.start